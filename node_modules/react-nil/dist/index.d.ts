import * as React from 'react';
export interface NilNode<P = Record<string, unknown>> {
    type: string;
    props: P;
    children: NilNode[];
}
export interface HostContainer {
    head: NilNode | null;
}
/**
 * Renders a React element into a `null` root.
 */
export declare function render(element: React.ReactNode): HostContainer;
/**
 * Renders a React element into a foreign {@link HostContainer}.
 */
export declare function createPortal(element: React.ReactNode, container: HostContainer): JSX.Element;
declare module 'react' {
    const unstable_act: <T = any>(cb: () => Promise<T>) => Promise<T>;
}
/**
 * Safely flush async effects when testing, simulating a legacy root.
 */
export declare const act: <T = any>(cb: () => Promise<T>) => Promise<T>;
